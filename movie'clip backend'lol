from flask import Flask, request, jsonify, send_file
from flask_sqlalchemy import SQLAlchemy
import os

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///trailer_db.sqlite3'
db = SQLAlchemy(app)

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(255), unique=True, nullable=False)
    wallet_address = db.Column(db.String(255), unique=True, nullable=False)
    points = db.Column(db.Integer, default=0)

class Trailer(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(255), nullable=False)
    description = db.Column(db.Text)
    video_url = db.Column(db.String(255), nullable=False)
    thumbnail_url = db.Column(db.String(255))
    is_blocked = db.Column(db.Boolean, default=True)
    price = db.Column(db.Numeric(10, 2), nullable=False)

class Transaction(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    trailer_id = db.Column(db.Integer, db.ForeignKey('trailer.id'))
    amount = db.Column(db.Numeric(10, 2), nullable=False)
    transaction_date = db.Column(db.DateTime, default=db.func.current_timestamp())

db.create_all()

@app.route('/trailers', methods=['GET'])
def get_trailers():
    trailers = Trailer.query.all()
    return jsonify([{
        'id': trailer.id,
        'title': trailer.title,
        'description': trailer.description,
        'video_url': trailer.video_url,
        'thumbnail_url': trailer.thumbnail_url,
        'is_blocked': trailer.is_blocked,
        'price': float(trailer.price)
    } for trailer in trailers])

@app.route('/buy', methods=['POST'])
def buy_trailer():
    user_id = request.json.get('user_id')
    trailer_id = request.json.get('trailer_id')
    amount = request.json.get('amount')
    
    user = User.query.get(user_id)
    trailer = Trailer.query.get(trailer_id)
    
    if user and trailer and amount >= trailer.price:
        transaction = Transaction(user_id=user.id, trailer_id=trailer.id, amount=amount)
        user.points += int(amount)
        trailer.is_blocked = False
        db.session.add(transaction)
        db.session.commit()
        return jsonify({'message': 'Trailer purchased successfully!'}), 200
    return jsonify({'message': 'Purchase failed!'}), 400

@app.route('/download/<int:trailer_id>', methods=['GET'])
def download_trailer(trailer_id):
    trailer = Trailer.query.get(trailer_id)
    if trailer and not trailer.is_blocked:
        return send_file(trailer.video_url)
    return jsonify({'message': 'Trailer is blocked!'}), 403

if __name__ == '__main__':
    app.run(debug=True)
